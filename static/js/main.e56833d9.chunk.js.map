{"version":3,"sources":["Card.js","Deck.js","Heading.js","App.js","index.js"],"names":["Card","props","rotation","Math","floor","random","xPos","yPos","_transform","className","style","transform","this","src","card","images","png","alt","value","suit","Component","Deck","cards","map","key","code","Heading","data-heading","children","App","state","deck","cardsDrawn","getNewDeck","a","axios","get","response","data","setState","console","error","updateDeck","deckId","url","drawCard","remaining","alert","deck_id","resp","st","onClick","ReactDOM","render","document","getElementById"],"mappings":"qWAGqBA,G,kBACnB,WAAYC,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAIC,EAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC/BH,GAA8C,IAAlCC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAsB,GAAK,EACvD,IAAIC,EAAOH,KAAKC,MAAsB,GAAhBD,KAAKE,UACvBE,EAAOJ,KAAKC,MAAsB,GAAhBD,KAAKE,UANV,OAOjB,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DL,EAA5D,QAPiB,E,sEAWjB,OACE,yBAAKO,UAAU,OAAOC,MAAO,CAAEC,UAAWC,KAAKJ,aAC7C,yBACEK,IAAKD,KAAKX,MAAMa,KAAKC,OAAOC,IAC5BC,IAAG,UAAKL,KAAKX,MAAMa,KAAKI,MAArB,eAAiCN,KAAKX,MAAMa,KAAKK,a,GAhB5BC,cCCbC,G,uLAEjB,OACE,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,kBACZG,KAAKX,MAAMqB,MAAMC,KAAI,SAAAT,GAAI,OACxB,kBAAC,EAAD,CAAMA,KAAMA,EAAMU,IAAKV,EAAKW,gB,GANNL,cCDbM,G,uLAEjB,OACE,6BACE,wBAAIC,eAAcf,KAAKX,MAAM2B,SAAUnB,UAAU,gBAC9CG,KAAKX,MAAM2B,e,GALeR,cCKhBS,G,iNACnBC,MAAQ,CACNC,KAAM,GACNC,WAAY,I,EAGdC,W,sBAAa,8BAAAC,EAAA,sEAGG,kDAHH,SAIcC,IAAMC,IADjB,mDAHH,cAIHC,EAJG,gBAKUA,EAASC,KALnB,OAKHP,EALG,OAMT,EAAKQ,SAAS,CACZR,OACAC,WAAY,KARL,kDAWTQ,QAAQC,MAAR,MAXS,0D,EAebC,W,uCAAa,WAAMC,GAAN,mBAAAT,EAAA,sEAGHU,EAHG,8CAG0CD,GAH1C,SAIcR,IAAMC,IAAIQ,GAJxB,cAIHP,EAJG,gBAKUA,EAASC,KALnB,OAKHP,EALG,OAMT,EAAKQ,SAAS,CAAER,SANP,kDAQTS,QAAQC,MAAR,MARS,0D,wDAiBbI,S,sBAAW,gCAAAX,EAAA,kEAI2B,IAA9B,EAAKJ,MAAMC,KAAKe,UAJb,uBAKLC,MAAM,iBALD,iCAQDH,EARC,8CAQ4C,EAAKd,MAAMC,KAAKiB,QAR5D,mBASYb,IAAMC,IAAIQ,GATtB,cASDK,EATC,iBAUYA,EAAKX,KAVjB,QAUDA,EAVC,OAWP,EAAKC,UAAS,SAAAW,GAAE,MAAK,CACnBlB,WAAW,GAAD,mBAAMkB,EAAGlB,YAAT,YAAwBM,EAAKhB,YAEzC,EAAKoB,WAAW,EAAKZ,MAAMC,KAAKiB,SAdzB,kDAgBPR,QAAQC,MAAR,MAhBO,0D,6LAHT7B,KAAKqB,a,qIAwBL,OACE,yBAAKxB,UAAU,OACb,kBAAC,EAAD,oBACA,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,YAAY0C,QAASvC,KAAKqB,YAA5C,gBAGA,4BAAQxB,UAAU,YAAY0C,QAASvC,KAAKiC,UAA5C,cAIF,kBAAC,EAAD,CAAMvB,MAAOV,KAAKkB,MAAME,kB,GAtECZ,cCJjCgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e56833d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.scss\";\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    //Set the rotation and translate of the card\n    let rotation = Math.floor(Math.random() * 25);\n    rotation *= Math.floor(Math.random() * 2) === 1 ? 1 : -1;\n    let xPos = Math.floor(Math.random() * 25);\n    let yPos = Math.floor(Math.random() * 25);\n    this._transform = `translate(${xPos}px, ${yPos}px) rotate(${rotation}deg)`;\n  }\n\n  render() {\n    return (\n      <div className=\"card\" style={{ transform: this._transform }}>\n        <img\n          src={this.props.card.images.png}\n          alt={`${this.props.card.value} of ${this.props.card.suit}`}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./Deck.scss\";\n\nexport default class Deck extends Component {\n  render() {\n    return (\n      <div className=\"deck\">\n        <div className=\"deck-container\">\n          {this.props.cards.map(card => (\n            <Card card={card} key={card.code} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Heading.scss\";\n\nexport default class Heading extends Component {\n  render() {\n    return (\n      <div>\n        <h1 data-heading={this.props.children} className=\"FancyHeading\">\n          {this.props.children}\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Deck from \"./Deck\";\nimport Heading from \"./Heading\";\n\n// CSS Dependencies\nimport \"./App.scss\";\n\nexport default class App extends Component {\n  state = {\n    deck: {},\n    cardsDrawn: []\n  };\n\n  getNewDeck = async () => {\n    // Fetch new deck\n    try {\n      const url = \"https://deckofcardsapi.com/api/deck/new/shuffle\";\n      const response = await axios.get(url);\n      const deck = await response.data;\n      this.setState({\n        deck,\n        cardsDrawn: []\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  updateDeck = async deckId => {\n    // Update deck to state\n    try {\n      const url = `https://deckofcardsapi.com/api/deck/${deckId}`;\n      const response = await axios.get(url);\n      const deck = await response.data;\n      this.setState({ deck });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  async componentDidMount() {\n    // Fetch new deck of cards on load and save to state\n    this.getNewDeck();\n  }\n\n  drawCard = async () => {\n    // Draw a new card from the current deck\n    try {\n      //Try and draw another card from the API\n      if (this.state.deck.remaining === 0) {\n        alert(\"No Cards Left\");\n        return;\n      }\n      const url = `https://deckofcardsapi.com/api/deck/${this.state.deck.deck_id}/draw/`;\n      const resp = await axios.get(url);\n      const data = await resp.data;\n      this.setState(st => ({\n        cardsDrawn: [...st.cardsDrawn, ...data.cards]\n      }));\n      this.updateDeck(this.state.deck.deck_id);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Heading>Pick a card</Heading>\n        <div className=\"buttonContainer\">\n          <button className=\"appButton\" onClick={this.getNewDeck}>\n            Get New Deck\n          </button>\n          <button className=\"appButton\" onClick={this.drawCard}>\n            Draw Card\n          </button>\n        </div>\n        <Deck cards={this.state.cardsDrawn} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}