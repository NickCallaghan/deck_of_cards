{"version":3,"sources":["Card.js","Deck.js","Heading.js","App.js","index.js"],"names":["Card","state","rotation","randomRotation","Math","floor","random","setState","this","styles","transform","className","style","src","props","card","images","png","alt","value","suit","Component","Deck","cards","map","Heading","data-heading","children","App","deck","cardsDrawn","getNewDeck","a","axios","get","response","data","updateDeck","deckId","url","drawCard","deck_id","resp","st","onClick","ReactDOM","render","document","getElementById"],"mappings":"qWAGqBA,G,iNACnBC,MAAQ,CACNC,SAAU,G,EAGZC,eAAiB,WACf,IAAID,EAAWE,KAAKC,MAAsB,GAAhBD,KAAKE,UAC/BJ,GAA8C,IAAlCE,KAAKC,MAAsB,EAAhBD,KAAKE,UAAsB,GAAK,EACvD,EAAKC,SAAS,CAAEL,c,mFAIhBM,KAAKL,mB,+BAIL,IAAIM,EAAS,CACXC,UAAU,UAAD,OAAYF,KAAKP,MAAMC,SAAvB,SAGX,OACE,yBAAKS,UAAU,OAAOC,MAAOH,GAC3B,yBACEI,IAAKL,KAAKM,MAAMC,KAAKC,OAAOC,IAC5BC,IAAG,UAAKV,KAAKM,MAAMC,KAAKI,MAArB,eAAiCX,KAAKM,MAAMC,KAAKK,a,GAxB5BC,cCCbC,G,uLAEjB,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,kBACZH,KAAKM,MAAMS,MAAMC,KAAI,SAAAT,GAAI,OACxB,kBAAC,EAAD,CAAMA,KAAMA,a,GANUM,cCDbI,G,uLAEjB,OACE,6BACE,wBAAIC,eAAclB,KAAKM,MAAMa,SAAUhB,UAAU,gBAC9CH,KAAKM,MAAMa,e,GALeN,cCKhBO,G,iNACnB3B,MAAQ,CACN4B,KAAM,GACNC,WAAY,I,EAGdC,W,sBAAa,8BAAAC,EAAA,4DAEC,kDAFD,SAGYC,IAAMC,IADjB,mDAFD,cAGLC,EAHK,gBAIQA,EAASC,KAJjB,OAILP,EAJK,OAKX,EAAKtB,SAAS,CACZsB,OACAC,WAAY,KAPH,2C,EAWbO,W,uCAAa,WAAMC,GAAN,mBAAAN,EAAA,6DAELO,EAFK,8CAEwCD,GAFxC,SAGYL,IAAMC,IAAIK,GAHtB,cAGLJ,EAHK,gBAIQA,EAASC,KAJjB,OAILP,EAJK,OAKX,EAAKtB,SAAS,CAAEsB,SALL,2C,wDAabW,S,sBAAW,gCAAAR,EAAA,6DAEHO,EAFG,8CAE0C,EAAKtC,MAAM4B,KAAKY,QAF1D,mBAGUR,IAAMC,IAAIK,GAHpB,cAGHG,EAHG,gBAIUA,EAAKN,KAJf,OAIHA,EAJG,OAKT,EAAK7B,UAAS,SAAAoC,GAAE,MAAK,CACnBb,WAAW,GAAD,mBAAMa,EAAGb,YAAT,YAAwBM,EAAKb,YAEzC,EAAKc,WAAW,EAAKpC,MAAM4B,KAAKY,SARvB,2C,6LAHTjC,KAAKuB,a,qIAeL,OACE,yBAAKpB,UAAU,OACb,kBAAC,EAAD,oBACA,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,YAAYiC,QAASpC,KAAKuB,YAA5C,gBAGA,4BAAQpB,UAAU,YAAYiC,QAASpC,KAAKgC,UAA5C,cAIF,kBAAC,EAAD,CAAMjB,MAAOf,KAAKP,MAAM6B,kB,GArDCT,cCJjCwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b6ad1e01.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.scss\";\n\nexport default class Card extends Component {\n  state = {\n    rotation: 0\n  };\n\n  randomRotation = () => {\n    let rotation = Math.floor(Math.random() * 25);\n    rotation *= Math.floor(Math.random() * 2) === 1 ? 1 : -1; // this will add minus sign in 50% of cases\n    this.setState({ rotation });\n  };\n\n  componentDidMount() {\n    this.randomRotation();\n  }\n\n  render() {\n    let styles = {\n      transform: `rotate(${this.state.rotation}deg)`\n    };\n\n    return (\n      <div className=\"card\" style={styles}>\n        <img\n          src={this.props.card.images.png}\n          alt={`${this.props.card.value} of ${this.props.card.suit}`}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./Deck.scss\";\n\nexport default class Deck extends Component {\n  render() {\n    return (\n      <div className=\"deck\">\n        <div className=\"deck-container\">\n          {this.props.cards.map(card => (\n            <Card card={card} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Heading.scss\";\n\nexport default class Heading extends Component {\n  render() {\n    return (\n      <div>\n        <h1 data-heading={this.props.children} className=\"FancyHeading\">\n          {this.props.children}\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Deck from \"./Deck\";\nimport Heading from \"./Heading\";\n\n// CSS Dependencies\nimport \"./App.scss\";\n\nexport default class App extends Component {\n  state = {\n    deck: {},\n    cardsDrawn: []\n  };\n\n  getNewDeck = async () => {\n    // Fetch new deck\n    const url = \"https://deckofcardsapi.com/api/deck/new/shuffle\";\n    const response = await axios.get(url);\n    const deck = await response.data;\n    this.setState({\n      deck,\n      cardsDrawn: []\n    });\n  };\n\n  updateDeck = async deckId => {\n    // Update deck to state\n    const url = `https://deckofcardsapi.com/api/deck/${deckId}`;\n    const response = await axios.get(url);\n    const deck = await response.data;\n    this.setState({ deck });\n  };\n\n  async componentDidMount() {\n    // Fetch new deck of cards on load and save to state\n    this.getNewDeck();\n  }\n\n  drawCard = async () => {\n    // Draw a new card from the current deck\n    const url = `https://deckofcardsapi.com/api/deck/${this.state.deck.deck_id}/draw/`;\n    const resp = await axios.get(url);\n    const data = await resp.data;\n    this.setState(st => ({\n      cardsDrawn: [...st.cardsDrawn, ...data.cards]\n    }));\n    this.updateDeck(this.state.deck.deck_id);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Heading>Pick a card</Heading>\n        <div className=\"buttonContainer\">\n          <button className=\"appButton\" onClick={this.getNewDeck}>\n            Get New Deck\n          </button>\n          <button className=\"appButton\" onClick={this.drawCard}>\n            Draw Card\n          </button>\n        </div>\n        <Deck cards={this.state.cardsDrawn} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}